log-analysis-app/
├── service-receiver/                 # Service 1: Message Receiver (SQS Consumer)
│   ├── app/
│   │   ├── main.py                   # Main entry point (polls SQS)
│   │   ├── sqs_handler.py            # Polls FIFO SQS Queue
│   │   ├── send_to_extractor.py      # Forwards message to the Extractor Service
│   │   └── requirements.txt          # Python dependencies
│   ├── Dockerfile                    # Dockerfile for the Receiver Service
│   └── tests/                        # Unit tests for the service
│
├── service-log-extractor/            # Service 2: Log Extractor (File Processing)
│   ├── app/
│   │   ├── main.py                   # Main entry point (Receives HTTP requests)
│   │   ├── s3_handler.py             # Fetches the log from S3
│   │   ├── log_parser.py             # Scans logs using regex
│   │   ├── send_to_storage.py        # Sends error summary to Result Storage Service
│   │   └── requirements.txt          
│   ├── Dockerfile                    
│   └── tests/                        
│
├── service-result-storage/           # Service 3: Result Storage (DynamoDB Writer)
│   ├── app/
│   │   ├── main.py                   # Main entry point (Receives HTTP requests)
│   │   ├── dynamodb_handler.py       # Stores error summary in DynamoDB
│   │   ├── ses_handler.py            # (Optional) Sends notifications via SES
│   │   └── requirements.txt
│   ├── Dockerfile                    
│   └── tests/                        
│
├── terraform/                        # Terraform IaC for AWS Setup
│   ├── eks.tf                        # EKS Cluster
│   ├── s3.tf                         # S3 Bucket for file storage
│   ├── sqs.tf                        # SQS FIFO Queue
│   ├── dynamodb.tf                   # DynamoDB Table
│   ├── lambda.tf                     # Lambda Function for S3 Trigger
│   ├── iam.tf                        # IAM Roles and Policies
│   └── variables.tf                  # Variables for better management
│
├── helm/                             # Helm Charts for Kubernetes Deployment (Optional)
│   ├── charts/
│   │   ├── service-receiver/         # Helm chart for Receiver Service
│   │   ├── service-log-extractor/    # Helm chart for Extractor Service
│   │   └── service-result-storage/   # Helm chart for Storage Service
│   └── values.yaml                   # Helm configuration file
│
├── .gitignore                        # Ignore unnecessary files
├── README.md                        # Project documentation



✅ Key Components Explained:
1. service-receiver/ (SQS Consumer)

    Main Function: Polls SQS and forwards messages to the Log Extractor Service.
    Key Files:
        sqs_handler.py: Listens to FIFO SQS Queue.
        send_to_extractor.py: Forwards messages via internal HTTP.

2. service-log-extractor/ (Log Processor)

    Main Function: Receives the message and processes the log file for errors.
    Key Files:
        s3_handler.py: Fetches log data from S3.
        log_parser.py: Scans logs using Python Regex.
        send_to_storage.py: Sends the error summary to the Result Storage Service.

3. service-result-storage/ (DynamoDB Writer)

    Main Function: Receives the error summary and writes it to DynamoDB.
    Key Files:
        dynamodb_handler.py: Writes the error summary to DynamoDB.
        ses_handler.py: (Optional) Sends an SES email notification.

4. terraform/ (AWS Infrastructure as Code)

    Automates the creation of:
        EKS Cluster (eks.tf)
        S3 Bucket (s3.tf)
        SQS FIFO Queue (sqs.tf)
        DynamoDB Table (dynamodb.tf)
        IAM Roles and Permissions (iam.tf)

